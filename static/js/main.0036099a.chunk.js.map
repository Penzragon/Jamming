{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/PlaylistItem/PlaylistItem.js","Components/PlaylistList/PlaylistList.js","Components/Playlist/Playlist.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["accessToken","SearchBar","props","search","bind","handleTermChange","this","onSearch","state","term","e","setState","target","value","className","placeholder","onChange","onClick","React","Component","Track","isPlaying","audio","Audio","track","preview","addTrack","removeTrack","playSample","pauseSample","play","pause","isRemoval","onAdd","onRemove","src","img","alt","name","artist","album","renderPlayPause","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expireInMatch","expireIn","Number","setTimeout","history","pushState","accessUrl","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","images","url","preview_url","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris","getUserPlaylist","playlist","PlaylistItem","PlaylistList","listPlaylists","listPlaylist","Playlist","handleNameChange","onNameChange","defaultValue","playlistTracks","onSave","App","playlistName","updatePlaylistName","find","savedTrack","push","filter","newName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2RAEIA,E,gGC+BWC,E,kDA7Bd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBAHN,E,0CAMnB,WACCE,KAAKJ,MAAMK,SAASD,KAAKE,MAAMC,Q,8BAGhC,SAAiBC,GAChBJ,KAAKK,SAAS,CAAEF,KAAMC,EAAEE,OAAOC,U,oBAGhC,WACC,OACC,sBAAKC,UAAU,YAAf,UACC,uBACCC,YAAY,iCACZC,SAAUV,KAAKD,mBAEhB,wBAAQS,UAAU,eAAeG,QAASX,KAAKH,OAA/C,2B,GAtBoBe,IAAMC,WCwFfC,G,oEAvFd,WAAYlB,GAAQ,IAAD,8BAClB,cAAMA,IACDM,MAAQ,CACZa,WAAW,EACXC,MAAO,IAAIC,MAAM,EAAKrB,MAAMsB,MAAMC,UAEnC,EAAKC,SAAW,EAAKA,SAAStB,KAAd,gBAChB,EAAKuB,YAAc,EAAKA,YAAYvB,KAAjB,gBACnB,EAAKwB,WAAa,EAAKA,WAAWxB,KAAhB,gBAClB,EAAKyB,YAAc,EAAKA,YAAYzB,KAAjB,gBATD,E,8CAYnB,WACCE,KAAKK,SAAS,CAAEU,WAAW,IAC3Bf,KAAKE,MAAMc,MAAMQ,S,yBAGlB,WACCxB,KAAKK,SAAS,CAAEU,WAAW,IAC3Bf,KAAKE,MAAMc,MAAMS,U,0BAGlB,WACC,OAAIzB,KAAKJ,MAAM8B,UAEb,wBAAQlB,UAAU,eAAeG,QAASX,KAAKqB,YAA/C,eAMA,wBAAQb,UAAU,eAAeG,QAASX,KAAKoB,SAA/C,iB,6BAOH,WACC,OAAIpB,KAAKE,MAAMa,UAEb,wBACCP,UAAU,+BACVG,QAASX,KAAKuB,YAFf,mBASA,wBAAQf,UAAU,yBAAyBG,QAASX,KAAKsB,WAAzD,oB,sBAOH,WACCtB,KAAKJ,MAAM+B,MAAM3B,KAAKJ,MAAMsB,S,yBAG7B,WACClB,KAAKJ,MAAMgC,SAAS5B,KAAKJ,MAAMsB,S,oBAGhC,WACC,OACC,sBAAKV,UAAU,QAAf,UACC,qBAAKqB,IAAK7B,KAAKJ,MAAMsB,MAAMY,IAAKC,IAAI,gBACpC,sBAAKvB,UAAU,oBAAf,UACC,6BAAKR,KAAKJ,MAAMsB,MAAMc,OACtB,8BACEhC,KAAKJ,MAAMsB,MAAMe,OADnB,MAC8BjC,KAAKJ,MAAMsB,MAAMgB,SAG9ClC,KAAKJ,MAAMsB,MAAMC,SAAWnB,KAAKmC,mBAChCnC,KAAKJ,MAAMsB,MAAMC,SAClB,mBAAGX,UAAU,UAAb,gCAIDR,KAAKoC,sB,GAlFUxB,IAAMC,YCuBXwB,E,4JArBd,WAAU,IAAD,OACR,OACC,qBAAK7B,UAAU,YAAf,WACER,KAAKJ,MAAM0C,QACTtC,KAAKJ,MAAM0C,OAAOC,KAAI,SAACrB,GACvB,OACC,cAAC,EAAD,CACCA,MAAOA,EAEPS,MAAO,EAAK/B,MAAM+B,MAClBC,SAAU,EAAKhC,MAAMgC,SACrBF,UAAW,EAAK9B,MAAM8B,WAHjBR,EAAMsB,a,GATI5B,IAAMC,WCef4B,E,4JAdd,WACC,OACC,sBAAKjC,UAAU,gBAAf,UACC,yCACA,cAAC,EAAD,CACC8B,OAAQtC,KAAKJ,MAAM8C,cACnBf,MAAO3B,KAAKJ,MAAM+B,MAClBD,WAAW,W,GARYd,IAAMC,WJA5B8B,G,YAAU,CACfC,eADe,WAEd,GAAIlD,EACH,OAAOA,EAER,IAAMmD,EAAmBC,OAAOC,SAASC,KAAKC,MAAM,wBAC9CC,EAAgBJ,OAAOC,SAASC,KAAKC,MAAM,sBACjD,GAAIJ,GAAoBK,EAAe,CACtCxD,EAAcmD,EAAiB,GAC/B,IAAMM,EAAWC,OAAOF,EAAc,IAGtC,OAFAJ,OAAOO,YAAW,kBAAO3D,EAAc,KAAgB,IAAXyD,GAC5CL,OAAOQ,QAAQC,UAAU,eAAgB,KAAM,KACxC7D,EAEP,IAAM8D,EAAS,2DAlBD,mCAkBC,0EAjBE,wCAkBjBV,OAAOC,SAAWS,GAIpB3D,OAnBe,SAmBRM,GACN,IAAMT,EAAciD,EAAQC,iBAC5B,OAAOa,MAAM,kDAAD,OAAmDtD,GAAQ,CACtEuD,QAAS,CACRC,cAAc,UAAD,OAAYjE,MAGzBkE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACN,OAAKA,EAAazB,OAGXyB,EAAazB,OAAO0B,MAAMzB,KAAI,SAACrB,GAAD,MAAY,CAChDsB,GAAItB,EAAMsB,GACVR,KAAMd,EAAMc,KACZC,OAAQf,EAAM+C,QAAQ,GAAGjC,KACzBE,MAAOhB,EAAMgB,MAAMF,KACnBkC,IAAKhD,EAAMgD,IACXpC,IAAKZ,EAAMgB,MAAMiC,OAAO,GAAGC,IAC3BjD,QAASD,EAAMmD,gBATR,OAcXC,aA3Ce,SA2CFtC,EAAMuC,GAClB,GAAKvC,GAASuC,EAAUC,OAAxB,CAGA,IAEIC,EAFE/E,EAAciD,EAAQC,iBACtBc,EAAU,CAAEC,cAAc,UAAD,OAAYjE,IAG3C,OAAO+D,MAAM,gCAAiC,CAC7CC,QAASA,IAERE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEN,OADAU,EAASV,EAAavB,GACfiB,MAAM,oCAAD,OAAqCgB,EAArC,cAAyD,CACpEf,QAASA,EACTgB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAE7C,KAAMA,MAE5B4B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACN,IAAMe,EAAaf,EAAavB,GAChC,OAAOiB,MAAM,oCAAD,OACyBgB,EADzB,sBAC6CK,EAD7C,WAEX,CACCpB,QAASA,EACTgB,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEE,KAAMR,cAOpCS,gBA7Ee,WA8Ed,IAEIP,EAFE/E,EAAciD,EAAQC,iBACtBc,EAAU,CAAEC,cAAc,UAAD,OAAYjE,IAG3C,OAAO+D,MAAM,gCAAiC,CAC7CC,QAASA,IAERE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAEN,OADAU,EAASV,EAAavB,GACfiB,MAAM,oCAAD,OAAqCgB,EAArC,cAAyD,CACpEf,QAASA,IAERE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACN,OAAKA,EAAaC,MAGXD,EAAaC,MAAMzB,KAAI,SAAC0C,GAAD,MAAe,CAC5CzC,GAAIyC,EAASzC,GACbR,KAAMiD,EAASjD,SAJR,YAWCW,IKhGAuC,G,kKATd,WACC,OACC,qBAAK1E,UAAU,gBAAf,SACC,4BAAIR,KAAKJ,MAAMqF,SAASjD,a,GAJDpB,IAAMC,YCgClBsE,E,kDA7Bd,WAAYvF,GAAQ,IAAD,8BAClB,cAAMA,IACDM,MAAQ,CAAEkF,cAAe,IAFZ,E,sDAKnB,WAAsB,IAAD,OACpBzC,EAAQqC,kBAAkBpB,MAAK,SAACyB,GAC/B,EAAKhF,SAAS,CAAE+E,cAAeC,S,oBAIjC,WACC,OACC,sBAAK7E,UAAU,oBAAf,UACC,oBAAIA,UAAU,QAAd,4BACA,qBAAKA,UAAU,gBAAf,SACC,qBAAKA,UAAU,eAAf,WACER,KAAKE,MAAMkF,eACTpF,KAAKE,MAAMkF,cAAc7C,KAAI,SAAC0C,GAC9B,OAAO,cAAC,EAAD,CAAcA,SAAUA,GAAeA,EAASzC,kB,GApBrC5B,IAAMC,WC8BlByE,E,kDA7Bd,WAAY1F,GAAQ,IAAD,8BAClB,cAAMA,IACD2F,iBAAmB,EAAKA,iBAAiBzF,KAAtB,gBAFN,E,oDAKnB,SAAiBM,GAChBJ,KAAKJ,MAAM4F,aAAapF,EAAEE,OAAOC,S,oBAGlC,WACC,OACC,sBAAKC,UAAU,WAAf,UACC,uBAAOiF,aAAa,eAAe/E,SAAUV,KAAKuF,mBAClD,qBAAK/E,UAAU,eAAf,SACC,cAAC,EAAD,CACC8B,OAAQtC,KAAKJ,MAAM8F,eACnB9D,SAAU5B,KAAKJ,MAAMgC,SACrBF,WAAW,MAGb,wBAAQlB,UAAU,gBAAgBG,QAASX,KAAKJ,MAAM+F,OAAtD,6BAGA,cAAC,EAAD,W,GAxBmB/E,IAAMC,WC4Ed+E,E,kDAzEd,WAAYhG,GAAQ,IAAD,8BAClB,cAAMA,IACDM,MAAQ,CACZwC,cAAe,GACfmD,aAAc,GACdH,eAAgB,IAEjB,EAAKtE,SAAW,EAAKA,SAAStB,KAAd,gBAChB,EAAKuB,YAAc,EAAKA,YAAYvB,KAAjB,gBACnB,EAAKgG,mBAAqB,EAAKA,mBAAmBhG,KAAxB,gBAC1B,EAAKwE,aAAe,EAAKA,aAAaxE,KAAlB,gBACpB,EAAKD,OAAS,EAAKA,OAAOC,KAAZ,gBAXI,E,4CAcnB,SAASoB,GACR,IAAMoB,EAAStC,KAAKE,MAAMwF,eACtBpD,EAAOyD,MAAK,SAACC,GAAD,OAAgBA,EAAWxD,KAAOtB,EAAMsB,QAGxDF,EAAO2D,KAAK/E,GACZlB,KAAKK,SAAS,CAAEqF,eAAgBpD,O,yBAGjC,SAAYpB,GACX,IAAIoB,EAAStC,KAAKE,MAAMwF,eACxBpD,EAASA,EAAO4D,QAAO,SAACF,GAAD,OAAgBA,EAAWxD,KAAOtB,EAAMsB,MAC/DxC,KAAKK,SAAS,CAAEqF,eAAgBpD,M,gCAGjC,SAAmB6D,GAClBnG,KAAKK,SAAS,CAAEwF,aAAcM,M,0BAG/B,WAAgB,IAAD,OACR5B,EAAYvE,KAAKE,MAAMwF,eAAenD,KAAI,SAACrB,GAAD,OAAWA,EAAMgD,OACjEvB,EAAQ2B,aAAatE,KAAKE,MAAM2F,aAActB,GAAWX,MAAK,WAC7D,EAAKvD,SAAS,CAAEwF,aAAc,eAAgBH,eAAgB,U,oBAIhE,SAAOvF,GAAO,IAAD,OACZwC,EAAQ9C,OAAOM,GAAMyD,MAAK,SAAClB,GAC1B,EAAKrC,SAAS,CAAEqC,cAAeA,S,oBAIjC,WACC,OACC,gCACC,+BACC,sBAAMlC,UAAU,YAAhB,wBADD,YAGA,sBAAKA,UAAU,MAAf,UACC,cAAC,EAAD,CAAWP,SAAUD,KAAKH,SAC1B,sBAAKW,UAAU,eAAf,UACC,cAAC,EAAD,CACCkC,cAAe1C,KAAKE,MAAMwC,cAC1Bf,MAAO3B,KAAKoB,WAEb,cAAC,EAAD,CACCyE,aAAc7F,KAAKE,MAAM2F,aACzBH,eAAgB1F,KAAKE,MAAMwF,eAC3B9D,SAAU5B,KAAKqB,YACfmE,aAAcxF,KAAK8F,mBACnBH,OAAQ3F,KAAKsE,4B,GAjEF1D,IAAMC,WCKTuF,EAZS,SAACC,GACpBA,GAAeA,aAAuBC,UACzC,6BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC5DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDXO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.0036099a.chunk.js","sourcesContent":["const clientId = \"5826428eadfd45ba83a0b08888e331b5\";\r\nconst redirectUri = \"https://penzragon.github.io/Jamming/\";\r\nlet accessToken;\r\n\r\nconst Spotify = {\r\n\tgetAccessToken() {\r\n\t\tif (accessToken) {\r\n\t\t\treturn accessToken;\r\n\t\t}\r\n\t\tconst accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n\t\tconst expireInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n\t\tif (accessTokenMatch && expireInMatch) {\r\n\t\t\taccessToken = accessTokenMatch[1];\r\n\t\t\tconst expireIn = Number(expireInMatch[1]);\r\n\t\t\twindow.setTimeout(() => (accessToken = \"\"), expireIn * 1000);\r\n\t\t\twindow.history.pushState(\"Access Token\", null, \"/\");\r\n\t\t\treturn accessToken;\r\n\t\t} else {\r\n\t\t\tconst accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n\t\t\twindow.location = accessUrl;\r\n\t\t}\r\n\t},\r\n\r\n\tsearch(term) {\r\n\t\tconst accessToken = Spotify.getAccessToken();\r\n\t\treturn fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: `Bearer ${accessToken}`,\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((jsonResponse) => {\r\n\t\t\t\tif (!jsonResponse.tracks) {\r\n\t\t\t\t\treturn [];\r\n\t\t\t\t}\r\n\t\t\t\treturn jsonResponse.tracks.items.map((track) => ({\r\n\t\t\t\t\tid: track.id,\r\n\t\t\t\t\tname: track.name,\r\n\t\t\t\t\tartist: track.artists[0].name,\r\n\t\t\t\t\talbum: track.album.name,\r\n\t\t\t\t\turi: track.uri,\r\n\t\t\t\t\timg: track.album.images[2].url,\r\n\t\t\t\t\tpreview: track.preview_url,\r\n\t\t\t\t}));\r\n\t\t\t});\r\n\t},\r\n\r\n\tsavePlaylist(name, trackUris) {\r\n\t\tif (!name || !trackUris.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst accessToken = Spotify.getAccessToken();\r\n\t\tconst headers = { Authorization: `Bearer ${accessToken}` };\r\n\t\tlet userId;\r\n\r\n\t\treturn fetch(\"https://api.spotify.com/v1/me\", {\r\n\t\t\theaders: headers,\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((jsonResponse) => {\r\n\t\t\t\tuserId = jsonResponse.id;\r\n\t\t\t\treturn fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n\t\t\t\t\theaders: headers,\r\n\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\tbody: JSON.stringify({ name: name }),\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t\t.then((jsonResponse) => {\r\n\t\t\t\t\t\tconst playlistId = jsonResponse.id;\r\n\t\t\t\t\t\treturn fetch(\r\n\t\t\t\t\t\t\t`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\theaders: headers,\r\n\t\t\t\t\t\t\t\tmethod: \"POST\",\r\n\t\t\t\t\t\t\t\tbody: JSON.stringify({ uris: trackUris }),\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t},\r\n\r\n\tgetUserPlaylist() {\r\n\t\tconst accessToken = Spotify.getAccessToken();\r\n\t\tconst headers = { Authorization: `Bearer ${accessToken}` };\r\n\t\tlet userId;\r\n\r\n\t\treturn fetch(\"https://api.spotify.com/v1/me\", {\r\n\t\t\theaders: headers,\r\n\t\t})\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((jsonResponse) => {\r\n\t\t\t\tuserId = jsonResponse.id;\r\n\t\t\t\treturn fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n\t\t\t\t\theaders: headers,\r\n\t\t\t\t})\r\n\t\t\t\t\t.then((response) => response.json())\r\n\t\t\t\t\t.then((jsonResponse) => {\r\n\t\t\t\t\t\tif (!jsonResponse.items) {\r\n\t\t\t\t\t\t\treturn [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn jsonResponse.items.map((playlist) => ({\r\n\t\t\t\t\t\t\tid: playlist.id,\r\n\t\t\t\t\t\t\tname: playlist.name,\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t});\r\n\t\t\t});\r\n\t},\r\n};\r\n\r\nexport default Spotify;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.search = this.search.bind(this);\r\n\t\tthis.handleTermChange = this.handleTermChange.bind(this);\r\n\t}\r\n\r\n\tsearch() {\r\n\t\tthis.props.onSearch(this.state.term);\r\n\t}\r\n\r\n\thandleTermChange(e) {\r\n\t\tthis.setState({ term: e.target.value });\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"SearchBar\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tplaceholder=\"Enter A Song, Album, or Artist\"\r\n\t\t\t\t\tonChange={this.handleTermChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"SearchButton\" onClick={this.search}>\r\n\t\t\t\t\tSEARCH\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./Track.css\";\r\n\r\nclass Track extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisPlaying: false,\r\n\t\t\taudio: new Audio(this.props.track.preview),\r\n\t\t};\r\n\t\tthis.addTrack = this.addTrack.bind(this);\r\n\t\tthis.removeTrack = this.removeTrack.bind(this);\r\n\t\tthis.playSample = this.playSample.bind(this);\r\n\t\tthis.pauseSample = this.pauseSample.bind(this);\r\n\t}\r\n\r\n\tplaySample() {\r\n\t\tthis.setState({ isPlaying: true });\r\n\t\tthis.state.audio.play();\r\n\t}\r\n\r\n\tpauseSample() {\r\n\t\tthis.setState({ isPlaying: false });\r\n\t\tthis.state.audio.pause();\r\n\t}\r\n\r\n\trenderAction() {\r\n\t\tif (this.props.isRemoval) {\r\n\t\t\treturn (\r\n\t\t\t\t<button className=\"Track-action\" onClick={this.removeTrack}>\r\n\t\t\t\t\t-\r\n\t\t\t\t</button>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<button className=\"Track-action\" onClick={this.addTrack}>\r\n\t\t\t\t\t+\r\n\t\t\t\t</button>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\trenderPlayPause() {\r\n\t\tif (this.state.isPlaying) {\r\n\t\t\treturn (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"Track-action PlayPause Pause\"\r\n\t\t\t\t\tonClick={this.pauseSample}\r\n\t\t\t\t>\r\n\t\t\t\t\tPause\r\n\t\t\t\t</button>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<button className=\"Track-action PlayPause\" onClick={this.playSample}>\r\n\t\t\t\t\tPlay\r\n\t\t\t\t</button>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\taddTrack() {\r\n\t\tthis.props.onAdd(this.props.track);\r\n\t}\r\n\r\n\tremoveTrack() {\r\n\t\tthis.props.onRemove(this.props.track);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Track\">\r\n\t\t\t\t<img src={this.props.track.img} alt=\"album cover\" />\r\n\t\t\t\t<div className=\"Track-information\">\r\n\t\t\t\t\t<h3>{this.props.track.name}</h3>\r\n\t\t\t\t\t<p>\r\n\t\t\t\t\t\t{this.props.track.artist} | {this.props.track.album}\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t{this.props.track.preview && this.renderPlayPause()}\r\n\t\t\t\t\t{!this.props.track.preview && (\r\n\t\t\t\t\t\t<p className=\"NoAudio\">No Audio Sample</p>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{this.renderAction()}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Track;\r\n","import React from \"react\";\r\nimport \"./TrackList.css\";\r\nimport Track from \"../Track/Track\";\r\n\r\nclass TrackList extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"TrackList\">\r\n\t\t\t\t{this.props.tracks\r\n\t\t\t\t\t? this.props.tracks.map((track) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<Track\r\n\t\t\t\t\t\t\t\t\ttrack={track}\r\n\t\t\t\t\t\t\t\t\tkey={track.id}\r\n\t\t\t\t\t\t\t\t\tonAdd={this.props.onAdd}\r\n\t\t\t\t\t\t\t\t\tonRemove={this.props.onRemove}\r\n\t\t\t\t\t\t\t\t\tisRemoval={this.props.isRemoval}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t  })\r\n\t\t\t\t\t: false}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TrackList;\r\n","import React from \"react\";\r\nimport \"./SearchResults.css\";\r\nimport TrackList from \"../TrackList/TrackList\";\r\n\r\nclass SearchResults extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"SearchResults\">\r\n\t\t\t\t<h2>Results</h2>\r\n\t\t\t\t<TrackList\r\n\t\t\t\t\ttracks={this.props.searchResults}\r\n\t\t\t\t\tonAdd={this.props.onAdd}\r\n\t\t\t\t\tisRemoval={false}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default SearchResults;\r\n","import React from \"react\";\r\nimport \"./PlaylistItem.css\";\r\n\r\nclass PlaylistItem extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Playlist-item\">\r\n\t\t\t\t<p>{this.props.playlist.name}</p>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PlaylistItem;\r\n","import React from \"react\";\r\nimport \"./PlaylistList.css\";\r\nimport Spotify from \"../../util/Spotify\";\r\nimport PlaylistItem from \"../PlaylistItem/PlaylistItem\";\r\n\r\nclass PlaylistList extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { listPlaylists: [] };\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tSpotify.getUserPlaylist().then((listPlaylist) => {\r\n\t\t\tthis.setState({ listPlaylists: listPlaylist });\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"containerPlaylist\">\r\n\t\t\t\t<h2 className=\"local\">Local Playlist</h2>\r\n\t\t\t\t<div className=\"Playlist-list\">\r\n\t\t\t\t\t<div className=\"PlaylistList\">\r\n\t\t\t\t\t\t{this.state.listPlaylists\r\n\t\t\t\t\t\t\t? this.state.listPlaylists.map((playlist) => {\r\n\t\t\t\t\t\t\t\t\treturn <PlaylistItem playlist={playlist} key={playlist.id} />;\r\n\t\t\t\t\t\t\t  })\r\n\t\t\t\t\t\t\t: false}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PlaylistList;\r\n","import React from \"react\";\r\nimport \"./Playlist.css\";\r\nimport TrackList from \"../TrackList/TrackList\";\r\nimport PlaylistList from \"../PlaylistList/PlaylistList\";\r\n\r\nclass Playlist extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.handleNameChange = this.handleNameChange.bind(this);\r\n\t}\r\n\r\n\thandleNameChange(e) {\r\n\t\tthis.props.onNameChange(e.target.value);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"Playlist\">\r\n\t\t\t\t<input defaultValue=\"New Playlist\" onChange={this.handleNameChange} />\r\n\t\t\t\t<div className=\"PlaylistItem\">\r\n\t\t\t\t\t<TrackList\r\n\t\t\t\t\t\ttracks={this.props.playlistTracks}\r\n\t\t\t\t\t\tonRemove={this.props.onRemove}\r\n\t\t\t\t\t\tisRemoval={true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"Playlist-save\" onClick={this.props.onSave}>\r\n\t\t\t\t\tSAVE TO SPOTIFY\r\n\t\t\t\t</button>\r\n\t\t\t\t<PlaylistList />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Playlist;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport SearchBar from \"../SearchBar/SearchBar\";\r\nimport SearchResults from \"../SearchResults/SearchResults\";\r\nimport Playlist from \"../Playlist/Playlist\";\r\nimport Spotify from \"../../util/Spotify\";\r\n\r\nclass App extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsearchResults: [],\r\n\t\t\tplaylistName: \"\",\r\n\t\t\tplaylistTracks: [],\r\n\t\t};\r\n\t\tthis.addTrack = this.addTrack.bind(this);\r\n\t\tthis.removeTrack = this.removeTrack.bind(this);\r\n\t\tthis.updatePlaylistName = this.updatePlaylistName.bind(this);\r\n\t\tthis.savePlaylist = this.savePlaylist.bind(this);\r\n\t\tthis.search = this.search.bind(this);\r\n\t}\r\n\r\n\taddTrack(track) {\r\n\t\tconst tracks = this.state.playlistTracks;\r\n\t\tif (tracks.find((savedTrack) => savedTrack.id === track.id)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ttracks.push(track);\r\n\t\tthis.setState({ playlistTracks: tracks });\r\n\t}\r\n\r\n\tremoveTrack(track) {\r\n\t\tlet tracks = this.state.playlistTracks;\r\n\t\ttracks = tracks.filter((savedTrack) => savedTrack.id !== track.id);\r\n\t\tthis.setState({ playlistTracks: tracks });\r\n\t}\r\n\r\n\tupdatePlaylistName(newName) {\r\n\t\tthis.setState({ playlistName: newName });\r\n\t}\r\n\r\n\tsavePlaylist() {\r\n\t\tconst trackUris = this.state.playlistTracks.map((track) => track.uri);\r\n\t\tSpotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\r\n\t\t\tthis.setState({ playlistName: \"New Playlist\", playlistTracks: [] });\r\n\t\t});\r\n\t}\r\n\r\n\tsearch(term) {\r\n\t\tSpotify.search(term).then((searchResults) => {\r\n\t\t\tthis.setState({ searchResults: searchResults });\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\t<span className=\"highlight\">NightLight</span> Music\r\n\t\t\t\t</h1>\r\n\t\t\t\t<div className=\"App\">\r\n\t\t\t\t\t<SearchBar onSearch={this.search} />\r\n\t\t\t\t\t<div className=\"App-playlist\">\r\n\t\t\t\t\t\t<SearchResults\r\n\t\t\t\t\t\t\tsearchResults={this.state.searchResults}\r\n\t\t\t\t\t\t\tonAdd={this.addTrack}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Playlist\r\n\t\t\t\t\t\t\tplaylistName={this.state.playlistName}\r\n\t\t\t\t\t\t\tplaylistTracks={this.state.playlistTracks}\r\n\t\t\t\t\t\t\tonRemove={this.removeTrack}\r\n\t\t\t\t\t\t\tonNameChange={this.updatePlaylistName}\r\n\t\t\t\t\t\t\tonSave={this.savePlaylist}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\r\n\t\timport(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n\t\t\tgetCLS(onPerfEntry);\r\n\t\t\tgetFID(onPerfEntry);\r\n\t\t\tgetFCP(onPerfEntry);\r\n\t\t\tgetLCP(onPerfEntry);\r\n\t\t\tgetTTFB(onPerfEntry);\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./Components/App/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}